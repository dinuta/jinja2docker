"swagger": '2.0'
info: description: |
This is Jinja2 with Docker.
version: "1.0.1"
title: Jinja2Docker
termsOfService: http: //swagger.io/terms/
contact: email: apiteam@swagger.io
license: name: Apache 2.0
url: http: //www.apache.org/licenses/LICENSE-2.0.html
host: localhost:5000
basePath: /
tags: - name: Jinja2
description: Rend templates with Jinja2 and Docker
externalDocs:
description: Find out more about our store
url: http: //swagger.io
schemes: - http
paths: /env:
get: tags: - jinja2
summary: Jinja2 print useful env vars.
produces: - application/json
responses: 200: description: List of env vars in key value pairs
/rend/{template}/{variables}:
get: tags: - jinja2
summary: Jinja2 rend output from template and variable file. No env vars.
description: Gets the rendered output from template and variable files with Jinja2
produces: - application/json
parameters: - name: template
in: path
description: The template file mounted in docker
required: true
type: string
- name: variables
in: path
description: The variables file mounted in docker
required: true
type: string
responses: 200: description: Jinja2 rendered template or the exception which occured.
/rendwithenv/{template}/{variables
}: post: tags: - jinja2
summary: Jinja2 render with env vars inserted from json body
consumes: - application/json
- application/x-www-form-urlencoded
produces: - application/json
parameters: - name: template
in: path
description: Template file mounted in docker
required: true
type: string
- name: variables
in: path
description: Variables file mounted in docker
required: true
type: string
- name: EnvVars
in: body
description: E.g. {"envvar1": "value1", "envvar2": "value2"}
required: false
schema: $ref: '#/components/schemas/EnvVar'
responses: 200: description: Jinja2 rendered template or the exception which occured.
components: schemas: EnvVar: properties: key: type: string
