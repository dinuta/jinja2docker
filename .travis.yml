language: python

python:
  - "3.8"

services:
  - docker

env:
  #scripts dir host and docker
  DOCKER_SCRIPTS_DIR: /scripts

before_install:
  - docker build -t dinutac/jinja2docker:latest .

install:
  - pip install -r requirements.txt
  - pip3 install coveralls

before_script:
  - py.test tests/render_test.py --cov=entities

script:
  - python3 -m unittest discover tests/ "*_test.py"

  #override entrypoint for custom render
  - docker run --rm --entrypoint /scripts/entities/render.py
    -v $TRAVIS_BUILD_DIR/inputs/templates:/templates
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables
    -e DATABASE=mysql56
    -e IMAGE=latest
    dinutac/jinja2docker:latest
    /templates/standalone.j2 /variables/variables.yml

  #default render is jinja2-cli
  - docker run --rm
    -v $TRAVIS_BUILD_DIR/inputs/templates:/templates
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables
    -e DATABASE=mysql56
    -e IMAGE=latest
    dinutac/jinja2docker:latest
    /templates/standalone.j2 /variables/variables.yml --format=yml

  - docker run --rm
    -v $TRAVIS_BUILD_DIR/inputs/templates:/templates
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables
    dinutac/jinja2docker:latest
    /templates/json.j2 /variables/json.json --format=json

  - docker run --rm
    -v $TRAVIS_BUILD_DIR/inputs/templates:/templates
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables
    dinutac/jinja2docker:latest
    /templates/yml.j2 /variables/yml.yml --format=yaml

deploy:
  - provider: script
    script: bash docker_push_tag.sh
    skip_cleanup: true
    on:
      tags: true

  - provider: script
    script: bash docker_push_master.sh
    skip_cleanup: true
    on:
      branch: master

after_success:
  - coveralls


