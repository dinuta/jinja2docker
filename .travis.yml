language: python

python:
  - "3.7"

services:
  - docker

env:
  #scripts dir host and docker
  SCRIPTS_DIR: tests/
  DOCKER_SCRIPTS_DIR: /scripts

  # unit tests env vars
  TEMPLATES_DIR: inputs/templates
  VARS_DIR: inputs/variables

before_install:
  - docker build -t dinutac/jinja2docker:latest .
  - docker-compose up -d
  - sleep 10

install:
  - pip install -r requirements.txt
  - pip3 install coveralls

before_script:
  - py.test $SCRIPTS_DIR/render_test.py --cov=entities

script:
  - python3 -m unittest discover $SCRIPTS_DIR/tests "*_test.py"
  - docker exec jinja2docker python3 -m unittest discover $DOCKER_SCRIPTS_DIR "render_test.py"
  - docker-compose down -v

  #override entrypoint for custom render
  - docker run --rm --entrypoint /scripts/entities/render.py
    -v $TRAVIS_BUILD_DIR/inputs/templates:/data
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables  -e TEMPLATE=standalone.j2
    -e VARIABLES=variables.yml -e DATABASE=mysql56 -e IMAGE=latest dinutac/jinja2docker:latest

  #default render is jinja2-cli
  - docker run --rm
    -v $TRAVIS_BUILD_DIR/inputs/templates:/data
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables
    dinutac/jinja2docker:latest
    /data/json.j2 /variables/json.json --format=json

  - docker run --rm
    -v $TRAVIS_BUILD_DIR/inputs/templates:/data
    -v $TRAVIS_BUILD_DIR/inputs/variables:/variables
    dinutac/jinja2docker:latest
    /data/yml.j2 /variables/yml.yml --format=yaml

deploy:
  - provider: script
    script: bash docker_push_tag.sh
    skip_cleanup: true
    on:
      tags: true

  - provider: script
    script: bash docker_push_master.sh
    skip_cleanup: true
    on:
      branch: master

after_success:
  - coveralls


